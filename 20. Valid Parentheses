/*
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.
*/

class Solution {
    public boolean isValid(String s) {    
        if(s.length()==0)
            return true;
        if(s.charAt(0)==')' || s.charAt(0)=='}' || s.charAt(0)==']')
            return false;
        else{
            Stack<Character> stack = new Stack<Character>();
            for(int i=0; i<s.length(); i++){                
                if(!stack.empty() && ((stack.peek() == '(' && s.charAt(i) == ')') || (stack.peek() == '{' && s.charAt(i) == '}') || (stack.peek() == '[' && s.charAt(i) == ']')))
                    stack.pop();
                else
                    stack.push(s.charAt(i));
            }   
            if(stack.empty())
                return true;
            else
                return false;
        }
    }
} 
